-- Copyright (c) 2018 Scott Morrison. All rights reserved.
-- Released under Apache 2.0 license as described in the file LICENSE.
-- Authors: Scott Morrison

import .monoidal_category

open category_theory
namespace category_theory.monoidal

universes u‚ÇÅ v‚ÇÅ u‚ÇÇ v‚ÇÇ

def mop (C : Type u‚ÇÅ) : Type u‚ÇÅ := C

variables {C : Type u‚ÇÅ} [ùíû : monoidal_category.{u‚ÇÅ v‚ÇÅ} C]
include ùíû

instance underlying_category_monoidal_opposite : category.{u‚ÇÅ v‚ÇÅ} (mop C) := ùíû.to_category

instance monoidal_opposite : monoidal_category.{u‚ÇÅ v‚ÇÅ} (mop C) :=
{ tensor_obj   := Œª X Y, @monoidal_category.tensor_obj C _ Y X,
  tensor_hom   := Œª (X‚ÇÅ Y‚ÇÅ X‚ÇÇ Y‚ÇÇ : mop C) (f : X‚ÇÅ ‚ü∂ Y‚ÇÅ) (g : X‚ÇÇ ‚ü∂ Y‚ÇÇ), @monoidal_category.tensor_hom C _ _ _ _ _ g f,
  tensor_unit  := @monoidal_category.tensor_unit C _,
  associator   := Œª X Y Z, (@monoidal_category.associator C _ _ _ _).symm,
  left_unitor  := Œª X, (@monoidal_category.right_unitor C _ _),
  right_unitor := Œª X, (@monoidal_category.left_unitor C _ _) }

end category_theory.monoidal
